#!/bin/sh
#  _    _          ___           __ _     (R)
# | |  (_)_ _____ / __|___ _ _  / _(_)__ _
# | |__| \ V / -_) (__/ _ \ ' \|  _| / _` |
# |____|_|\_/\___|\___\___/_||_|_| |_\__, |
#                                    |___/
# Copyright (c) 2009-2018 Keppler IT GmbH.
# ----------------------------------------------------------------------------
# liveconfig-meta/postinst
# Debian package "post-installation" script
# https://github.com/liveconfig/meta/
# ----------------------------------------------------------------------------

set -e

enable_http2() {
	if [ ! -f /usr/lib/apache2/modules/mod_http2.so ] || [ ! -f /etc/apache2/mods-enabled/http2.load ]; then
		# mod_http2 not available or already enabled
		return 0
	fi

	if [ -f /etc/apache2/mods-enabled/php5.load ] || [ -f /etc/apache2/mods-enabled/php7.0.load ] || [ -f /etc/apache2/mods-enabled/php7.2.load ]; then
		echo "############################################################" 1>&2
		echo "## WARNING:" 1>&2
		echo "## You're using mod_php! This is a SECURITY RISK, and" 1>&2
		echo "## you will not be able to use HTTP/2 this way." 1>&2
		echo "## Please consider disabling the PHP module and" 1>&2
		echo "## switch from mpm_prefork/mpm_worker to mpm_event:" 1>&2
		echo "##" 1>&2
		[ -f /etc/apache2/mods-enabled/php5.load ] && echo "## apt purge libapache2-mod-php5" 1>&2
		[ -f /etc/apache2/mods-enabled/php7.0.load ] && echo "## apt purge libapache2-mod-php7.0" 1>&2
		[ -f /etc/apache2/mods-enabled/php7.2.load ] && echo "## apt purge libapache2-mod-php7.2" 1>&2
		[ -f /etc/apache2/mods-enabled/mpm_prefork.load ] && echo "## a2dismod mpm_prefork" 1>&2
		[ -f /etc/apache2/mods-enabled/mpm_worker.load ] && echo "## a2dismod mpm_worker" 1>&2
		echo "## a2enmod mpm_event http2" 1>&2
		echo "############################################################" 1>&2
	else
		# switch MPM from prefork to event:
		if [ -f /etc/apache2/mods-enabled/mpm_prefork.load ] || [ -f /etc/apache2/mods-enabled/mpm_worker.load ]; then
			[ -f /etc/apache2/mods-enabled/mpm_prefork.load ] && /usr/sbin/a2dismod mpm_prefork
			[ -f /etc/apache2/mods-enabled/mpm_worker.load ] && /usr/sbin/a2dismod mpm_worker
			/usr/sbin/a2enmod mpm_event
		fi
		# enable HTTP/2
		/usr/sbin/a2enmod http2
	fi
	return 0
}

case "$1" in
	configure)
		# continue
	;;
	abort-upgrade|abort-remove|abort-deconfigure)
		exit 0;
	;;
	*)
		echo "LiveConfig postinst called with unknown argument '$1'" >&2
		exit 0
	;;
esac

if [ "$1" = "configure" -a -z "$2" ]; then
	# first install (not an upgrade)

	# enable some apache modules after installation:
	if [ -x /usr/sbin/a2enmod ]; then
		/usr/sbin/a2enmod actions include proxy_http rewrite ssl suexec
		[ -f /usr/lib/apache2/modules/mod_proxy_fcgi.so ] && /usr/sbin/a2enmod proxy_fcgi
		enable_http2
		/usr/sbin/a2dismod status
	fi

	# set "ServerTokens" and "TraceEnable" to safer values
	if [ -f /etc/apache2/conf.d/security ]; then
		sed -i -e "s/^ServerTokens .*/ServerTokens Prod/" \
		       -e "s/^TraceEnable On/TraceEnable Off/i" \
		       /etc/apache2/conf.d/security
	fi
	if [ -f /etc/apache2/conf-available/security.conf ]; then
		sed -i -e "s/^ServerTokens .*/ServerTokens Prod/" \
		       -e "s/^TraceEnable On/TraceEnable Off/i" \
		       /etc/apache2/conf-available/security.conf
	fi

	# adjust suPHP settings:
	if [ -f /etc/suphp/suphp.conf ]; then
		sed -i -e 's/^check_vhost_docroot=true/check_vhost_docroot=false/' \
		       -e 's/^umask=0077/umask=0022/i' \
		       /etc/suphp/suphp.conf
		if ! grep -q '^application/x-httpd-php=' /etc/suphp/suphp.conf; then
			sed -i -e 's/^\(;Handler for php-scripts\)/\1\napplication\/x-httpd-php="php:\/usr\/bin\/php-cgi"/i' \
			       /etc/suphp/suphp.conf
		fi
	fi

	# restart Apache
	service apache2 restart

elif [ "$1" = "configure" -a -n "$2" ]; then
	# upgrade
	# enable some modules on existing installations:
	if [ -x /usr/sbin/a2enmod ]; then

		# enable proxy_fcgi (for FPM)
		[ -f /usr/lib/apache2/modules/mod_proxy_fcgi.so ] && [ ! -f /etc/apache2/mods-enabled/proxy_fcgi.load ] && /usr/sbin/a2enmod proxy_fcgi

		# enable HTTP/2
		enable_http2

		# restart Apache
		service apache2 restart

	fi

fi

exit 0

# <EOF>-----------------------------------------------------------------------
